<Window x:Class="JeuDeLaVie.View.GameOfLife"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JeuDeLaVie.View"
        xmlns:vm="clr-namespace:JeuDeLaVie.ViewModel"
        xmlns:behaviours="http://schemas.microsoft.com/xaml/behaviors"
        d:DataContext="{d:DesignInstance vm:VM_Game}"
        mc:Ignorable="d"
        Title="GameOfLife" Height="480" Width="800" SizeToContent="WidthAndHeight">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60*"/>
            <ColumnDefinition Width="40*"/>
        </Grid.ColumnDefinitions>
        <Border HorizontalAlignment="Left" VerticalAlignment="Top" Margin="14" BorderThickness="1" BorderBrush="Black" Height="{Binding CanvasHeightPx}" Width="{Binding CanvasWidthPx}">
            <ItemsControl ItemsSource="{Binding Formes}" IsHitTestVisible="{Binding CanClickForm}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Background="Transparent"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left" Value="{Binding Coord.PosX}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Coord.PosY}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="Gray" BorderThickness="1">
                            <Rectangle Width="{Binding Coord.TileWidth}" Height="{Binding Coord.TileWidth}" Fill="{Binding LifeFormColour}" StrokeThickness="1">
                                <behaviours:Interaction.Triggers>
                                    <behaviours:EventTrigger EventName="MouseDown">
                                        <behaviours:InvokeCommandAction Command="{Binding LifeFormClickedEvent}" PassEventArgsToCommand="True"/>
                                    </behaviours:EventTrigger>
                                </behaviours:Interaction.Triggers>
                            </Rectangle>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Border>
        <StackPanel Grid.Column="1" Margin="0, 7">
            <GroupBox Header="Configuration">
                <StackPanel Margin="5">
                    <Label FontWeight="Bold" FontSize="12">Générer une forme :</Label>
                    <Button Margin="5" Command="{Binding DrawGliderShape}">Glider</Button>
                    <Button Margin="5" Command="{Binding DrawBlinkerShape}">Blinker</Button>
                    <Button Margin="5" Command="{Binding DrawGunShape}">Gun</Button>
                    <Button Margin="5" Command="{Binding DrawRandomShape}">Aléatoire</Button>
                    <Label FontWeight="Bold" FontSize="12">Charger une forme :</Label>
                    <Button Margin="5" Command="{Binding LoadShapeFromFile}">Charger</Button>
                    <Label FontWeight="Bold" FontSize="12">Enregistrer une nouvelle forme :</Label>
                    <Button Margin="5" Command="{Binding SaveShapeToFile}">Enregistrer</Button>
                </StackPanel>
            </GroupBox>
            <StackPanel Orientation="Horizontal">
                <Label>Nombre d'itérations:</Label>
                <TextBox Margin="5" Text="{Binding NoIterations}" Width="75" IsEnabled="{Binding AllowIterationInput}"/>
                <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsInfiniteChecked}">Infini?</CheckBox>
            </StackPanel>
            <Button Background="Green" Command="{Binding StartGame}" Margin="15, 5" Visibility="{Binding StartVisible}">Démarrer</Button>
            <Button Background="Green" Command="{Binding Resume}" Margin="15, -25, 15, 5" Visibility="{Binding ResumeVisible}">Continuer</Button>
            <Button Background="Red" Command="{Binding Pause}" Visibility="{Binding PauseVisible}" Margin="15, 5">Pause</Button>
            <Button Background="Orange" Command="{Binding Step}" Visibility="{Binding StepVisible}" Margin="15, -25, 15, 5">Itérer (1 fois)</Button>
            <Label Content="{Binding CurrentIteration}" ContentStringFormat="# d'itération: {0}"/>
            <Slider Minimum="50" Maximum="1000" Value="{Binding IterationSpeed}" IsDirectionReversed="True" Margin="10, 5" TickPlacement="BottomRight" IsSnapToTickEnabled="False" TickFrequency="100" Foreground="Black"/>
            <Grid>
                <Label HorizontalAlignment="Left">Lent (1s / iteration)</Label>
                <Label HorizontalAlignment="Right">Rapide (0.05s / iteration)</Label>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
